## Ansible playbook to install WireGuard GUI on a Debian-based system

- name: Install WireGuard+GUI
  become: yes

  # ============================================================================
  vars:
    host_group: "{{ lookup('env', 'HOST_GROUP') }}"
    # Your 'hosts', can be a group or a single host, e.g. 'localhost' if
    # you want to run the playbook on the local machine.

    wg_gui_password: "{{ lookup('env', 'WIREGUARD_WEB_GUI_PASSWORD') }}"
    # Will be used to access the WireGuard GUI.

    wg_path: "{{ lookup('env', 'INSTALLATION_BASEPATH') }}/wireguard"
    # WireGuard configuration files.

    python3_venv_path: /tmp/Kseen715/python3-venv
    # Virtual environment for Python3. Just leave it as is.

    wg_port: "{{ lookup('env', 'WIREGUARD_PORT') }}"
    wg_gui_port: "{{ lookup('env', 'WIREGUARD_WEB_GUI_PORT') }}"
  # ============================================================================

  hosts: "{{ host_group }}"
  tasks:
    - name: Update system
      apt:
        update_cache: yes
        upgrade: dist

    - name: Ensure Docker is installed
      become: yes
      apt:
        name: docker.io
        state: present

    - name: Start Docker
      become: yes
      service:
        name: docker
        state: started
        enabled: yes

    - name: Ensure WireGuard directory exists
      become: yes
      file:
        path: "{{ wg_path }}"
        state: directory
        mode: "0755"

    - name: Ensure python3 and pip3 are installed
      become: yes
      apt:
        name:
          - python3
          - python3-pip
          - python3-venv
        state: present

    - name: Create a virtual environment and install Docker Python library
      become: yes
      block:
        - name: Create a virtual environment
          command: python3 -m venv {{ python3_venv_path }}
          args:
            creates: "{{ python3_venv_path }}"

        - name: Install Docker Python library in the virtual environment
          command: "{{ python3_venv_path }}/bin/pip install docker"

    - name: Deploy WireGuard+GUI
      become: yes
      vars:
        ansible_python_interpreter: "{{ python3_venv_path }}/bin/python3"
      docker_container:
        name: wg-easy
        image: ghcr.io/wg-easy/wg-easy
        restart_policy: always
        ports:
          - "{{ wg_port }}:51820/udp"
          - "{{ wg_gui_port }}:51821/tcp"
        volumes:
          - "~/.wg-easy:{{ wg_path }}"
        env:
          LANG: ru
          WG_HOST: "{{ ansible_default_ipv4.address }}"
          PASSWORD: "{{ wg_gui_password }}"
          PORT: "{{ wg_gui_port }}"
          WG_PORT: "{{ wg_port }}"
        capabilities:
          - NET_ADMIN
          - SYS_MODULE
        sysctls:
          net.ipv4.conf.all.src_valid_mark: 1
          net.ipv4.ip_forward: 1
        container_default_behavior: no_defaults

    - name: Clear apt cache
      apt:
        autoclean: yes

    - name: Print URL to access WireGuard GUI
      debug:
        msg: "Access the WireGuard GUI at http://{{ ansible_default_ipv4.address }}:{{ wg_gui_port }} with the specified password"
